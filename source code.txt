#include<stdio.h>
#include<string.h>

#define MAX_ITEMS 100

// Structure to store item information
typedef struct {
    int id;
    char name[50];
    int quantity;
    float price;
} Item;

// Global inventory array and count
Item inventory[MAX_ITEMS];
int count = 0;

// Function to add a new item
void addItem() {
    if (count >= MAX_ITEMS) {
        printf("Inventory full!\n");
        return;
    }

    Item newItem;

    printf("Enter Item ID: ");
    scanf("%d", &newItem.id);
    getchar(); // Clear newline

    printf("Enter Item Name: ");
    fgets(newItem.name, sizeof(newItem.name), stdin);
    newItem.name[strcspn(newItem.name, "\n")] = '\0'; // Remove newline

    printf("Enter Quantity: ");
    scanf("%d", &newItem.quantity);

    printf("Enter Price: ");
    scanf("%f", &newItem.price);

    inventory[count++] = newItem;
    printf("Item added successfully!\n");
}

// Function to display all items
void displayItems() {
    if (count == 0) {
        printf("Inventory is empty.\n");
        return;
    }

    printf("\n%-5s %-20s %-10s %-10s\n", "ID", "Name", "Quantity", "Price");
    for (int i = 0; i < count; i++) {
        printf("%-5d %-20s %-10d $%-10.2f\n", inventory[i].id, inventory[i].name, inventory[i].quantity, inventory[i].price);
    }
}

// Function to search item by ID
void searchItem() {
    int id;
    printf("Enter Item ID to search: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (inventory[i].id == id) {
            printf("Item found: %s | Qty: %d | Price: %.2f\n", inventory[i].name, inventory[i].quantity, inventory[i].price);
            return;
        }
    }
    printf("Item not found.\n");
}

// Function to update quantity
void updateItem() {
    int id, newQty;
    printf("Enter Item ID to update quantity: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (inventory[i].id == id) {
            printf("Current quantity: %d\n", inventory[i].quantity);
            printf("Enter new quantity: ");
            scanf("%d", &newQty);
            inventory[i].quantity = newQty;
            printf("Quantity updated.\n");
            return;
        }
    }
    printf("Item not found.\n");
}

// Function to delete an item
void deleteItem() {
    int id;
    printf("Enter Item ID to delete: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (inventory[i].id == id) {
            for (int j = i; j < count - 1; j++) {
                inventory[j] = inventory[j + 1];
            }
            count--;
            printf("Item deleted.\n");
            return;
        }
    }
    printf("Item not found.\n");
}

// Main function
int main() {
    int choice;

    do {
        printf("\n--- Inventory Management Menu ---\n");
        printf("1. Add Item\n");
        printf("2. Display Items\n");
        printf("3. Search Item\n");
        printf("4. Update Quantity\n");
        printf("5. Delete Item\n");
        printf("6. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: addItem(); break;
            case 2: displayItems(); break;
            case 3: searchItem(); break;
            case 4: updateItem(); break;
            case 5: deleteItem(); break;
            case 6: printf("Exiting program.\n"); break;
            default: printf("Invalid choice. Try again.\n");
        }
    } while (choice != 6);

  
}